#pragma namespace("\\\\.\\root\\default")
instance of __namespace{ name="ms_409";};
#pragma namespace("\\\\.\\root\\default\\ms_409")

[Description("Web download manager class inheriting from OMI_ConfigurationDownloadManager") : Amended,AMENDMENT, LOCALE("ms_409")] 
class MSFT_WebDownloadManager : OMI_ConfigurationDownloadManager
{
  [Description("String URL of the download manager location") : Amended] string ServerURL;
  [Description("The certificate ID used to locate the certificate.") : Amended] string CertificateID;
  [Description("Specifies whether report manager can use unsecure connection over http.") : Amended] boolean AllowUnsecureConnection; 
  [Description("Registration Key with which to register with the Pull Server") : Amended ToSubclass] string RegistrationKey;
  [Description("The set of configuration names with which to register with the Pull Server.") : Amended] string ConfigurationNames[];
  [Description("String URL of the proxy server") : Amended] string ProxyURL;
  [Description("Credential to access the proxy server") : Amended] MSFT_Credential ProxyCredential;
};

[Description("File configuration download manager class inheriting from OMI_ConfigurationDownloadManager") : Amended,AMENDMENT, LOCALE("ms_409")] 
class MSFT_FileDownloadManager : OMI_ConfigurationDownloadManager
{
  [Description("String UNC path of the download manager location") : Amended] string SourcePath;
  [Description("Default credential to access the file location") : Amended] string Credential;
};


[Description("Web resource module manager class inheriting from OMI_ResourceModuleManager") : Amended,AMENDMENT, LOCALE("ms_409")] 
class MSFT_WebResourceManager : OMI_ResourceModuleManager
{
  [Description("String URL of the resource module manager location") : Amended] string ServerURL;
  [Description("The certificate ID used to locate the certificate.") : Amended] string CertificateID;
  [Description ("Boolean variable to allow unsecure connections" ) : Amended] boolean AllowUnsecureConnection;
  [Description("Registration Key with which to register with the Resource Repository Web") : Amended ToSubclass] string RegistrationKey;
  [Description("String URL of the proxy server") : Amended] string ProxyURL;
  [Description("Credential to access the proxy server") : Amended] MSFT_Credential ProxyCredential;
};

[Description("File resource module manager class inheriting from OMI_ResourceModuleManager class") : Amended,AMENDMENT, LOCALE("ms_409")] 
class MSFT_FileResourceManager : OMI_ResourceModuleManager
{
  [Description("String UNC path of the File resource manager") : Amended] string SourcePath;
  [Description("Default credential to access resources.") : Amended] string Credential;
};

[Description("Web report manager class inheriting from OMI_ReportManager class") : Amended,AMENDMENT, LOCALE("ms_409")] 
class MSFT_WebReportManager : OMI_ReportManager
{
  [Description("String URL of the report manager location") : Amended] string ServerURL;
  [Description ("The certificate ID used to locate the certificate for secure connections." ) : Amended] string  CertificateID;
  [Description("Specifies whether report manager can use unsecure connection over http.") : Amended] boolean AllowUnsecureConnection; 
  [Description("Registration Key with which to register with the Reporting Server") : Amended ToSubclass] string RegistrationKey;
  [Description("String URL of the proxy server") : Amended] string ProxyURL;
  [Description("Credential to access the proxy server") : Amended] MSFT_Credential ProxyCredential;
};

[Description("This represents a Partial Configuration class.") : Amended,AMENDMENT, LOCALE("ms_409")] 
class MSFT_PartialConfiguration : OMI_MetaConfigurationResource
{
  [Description("Description of the partial configuration") : Amended] String Description;
  [Description("Defines the resources that are exclusive to this particular partial configuration") : Amended] String ExclusiveResources[];
  [Description("The configuration repository source that this partial configuration will use") : Amended] String ConfigurationSource;
  [Description("A dependency variable indicating which partial configuration must be applied prior to this") : Amended] String DependsOn[];
  [Description("The refresh mode for the server. Valid values are Pull, Push and Disabled.") : Amended] string RefreshMode;
};

[Description("Local Configuration Manager settings.") : Amended,AMENDMENT, LOCALE("MS_409")] 
class MSFT_DSCMetaConfigurationV2
{
  [Description("The time interval between consecutive runs for reapplying the configuration to get to the desired state.") : Amended] uint32 ConfigurationModeFrequencyMins;
  [Description("Reboot node if needed.") : Amended] boolean RebootNodeIfNeeded;
  [Description("The configuration apply mode for the server.") : Amended] string ConfigurationMode;
  [Description("The refresh mode for the server. Valid values are Pull, Push and Disabled.") : Amended] string RefreshMode;
  [Description("The action after reboot of the server. Valid values are ContinueConfiguration andStopConfiguration.") : Amended] string ActionAfterReboot;
  [Description("The configuration ID used to get the configuration from the pull server.") : Amended] string ConfigurationID;
  [Description("The time interval between consecutive runs to get the action from the server.") : Amended] uint32 RefreshFrequencyMins;
  [Description("Overwrite modules when downloading from Pull Server.") : Amended] boolean AllowModuleOverwrite;
  [Description("Debug mode. Valid values are None, ForceModuleImport, ResourceScriptBreakAll, ResourceScriptBreakpoint or All") : Amended] string DebugMode[];
  [Description("Current version of local configuration manager.") : Amended] string LCMVersion;
  [Description("Compatible versions of current local configuration manager.") : Amended] string LCMCompatibleVersions[];
  [Description("Current state of local configuration manager.") : Amended] string LCMState;
  [Description("State detail of local configuration manager.") : Amended] string LCMStateDetail;
  [Description("Array of configuration download manager objects that contain location information to download configurations") : Amended] string ConfigurationDownloadManagers[];
  [Description("Array of resource module managers pointing to a location to download missing DSCResources") : Amended] string ResourceModuleManagers[];
  [Description("Array of report managers pointing to a location that would help generate reports for DSC") : Amended] string ReportManagers[];
  [Description("Array of partial configurations that are specified to be applied") : Amended] string PartialConfigurations[];  
  [Description("Number of days to retain configuration status history.") : Amended] uint32 StatusRetentionTimeInDays;
  [Description("AgentId of the current Dsc Agent.") : Amended] string AgentId;
  [Description("Current signature validation policy.") : Amended] string SignatureValidationPolicy;
  [Description ("The signature validation options of the node.") : Amended] string  SignatureValidations[];   
  [Description ("The maximum module size in MB that can be downloaded.") : Amended] uint32  MaximumDownloadSizeMB; 
};
