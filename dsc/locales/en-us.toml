_version = 1

[args]
about = "Apply configuration or invoke specific DSC resources"
traceFormat = "Trace format to use"
traceLevel = "Trace level to use"
progressFormat = "Progress format to use"
completer = "Generate a shell completion script"
configAbout = "Apply a configuration document"
parameters = "Parameters to pass to the configuration as JSON or YAML"
parametersFile = "Parameters to pass to the configuration as a JSON or YAML file"
systemRoot = "Specify the operating system root path if not targeting the current running OS"
extensionAbout = "Operations on DSC extensions"
resourceAbout = "Invoke a specific DSC resource"
schemaAbout = "Get the JSON schema for a DSC type"
schemaType = "The type of DSC schema to get"
outputFormat = "The output format to use"
input = "The input document as JSON or YAML to pass to the configuration or resource"
file = "The path to a file used as input to the configuration or resource. Use '-' for the file to read from STDIN."
whatIf = "Run as a what-if operation instead of executing the configuration or resource"
getAbout = "Retrieve the current configuration"
setAbout = "Set the current configuration"
testAbout = "Test the current configuration"
validateAbout = "Validate the current configuration"
exportAbout = "Export the current configuration"
resolveAbout = "Resolve the current configuration"
listAbout = "List or find resources"
listExtensionAbout = "List or find extensions"
adapter = "Adapter filter to limit the resource search"
description = "Description keyword to search for in the resource description"
tags = "Tag to search for in the resource tags"
resourceGet = "Invoke the get operation to a resource"
getAll = "Get all instances of the resource"
resource = "The name of the resource to invoke"
functionAbout = "Operations on DSC functions"
listFunctionAbout = "List or find functions"
version = "The version of the resource to invoke in semver format"
mcpAbout = "Use DSC as a MCP server"

[main]
ctrlCReceived = "Ctrl-C received"
failedCtrlCHandler = "Failed to set Ctrl-C handler"
failedReadingParametersFile = "Failed to read parameters file"
readingParametersFromStdin = "Reading parameters from STDIN"
generatingCompleter = "Generating completion script for"
readingParametersFile = "Reading parameters from file"
usingDscVersion = "Running DSC version"
foundProcesses = "Found processes"
failedToGetPid = "Could not get current process id"
currentPid = "Current process id"
failedToGetProcess = "Could not get current process"
terminatingSubprocess = "Terminating subprocesses of process"
terminatingProcess = "Terminating process"
failedTerminatingProcess = "Failed to terminate process"
storeMessage = """DSC.exe is a command-line tool and cannot be run directly from the Windows Store or Explorer.
Visit https://aka.ms/dscv3-docs for more information on how to use DSC.exe.

Press any key to close this window"""
failedToStartMcpServer = "Failed to start MCP server: %{error}"

[mcp.mod]
failedToInitialize = "Failed to initialize MCP server: %{error}"
failedToStart = "Failed to start MCP server: %{error}"
instructions = "This server provides tools that work with DSC (DesiredStateConfiguration) which enables users to manage and configure their systems declaratively."
serverStopped = "MCP server stopped"
failedToCreateRuntime = "Failed to create async runtime: %{error}"
serverWaitFailed = "Failed to wait for MCP server: %{error}"

[mcp.invoke_dsc_config]
invalidConfiguration = "Invalid configuration document"
invalidParameters = "Invalid parameters"
failedConvertJson = "Failed to convert to JSON"
failedSerialize = "Failed to serialize configuration"
failedSetParameters = "Failed to set parameters"

[mcp.invoke_dsc_resource]
resourceNotFound = "Resource type '%{resource}' does not exist"

[mcp.list_dsc_functions]
invalidNamePattern = "Invalid function name pattern '%{pattern}'"

[mcp.list_dsc_resources]
resourceNotAdapter = "The resource '%{adapter}' is not a valid adapter"
adapterNotFound = "Adapter '%{adapter}' does not exist"

[mcp.show_dsc_resource]
resourceNotFound = "Resource type '%{type_name}' does not exist"

[resolve]
processingInclude = "Processing Include input"
invalidInclude = "Failed to deserialize Include input"
failedToReadFile = "Failed to read file '%{path}': %{error}"
failedToOpenFile = "Failed to open included file '%{path}': %{error}"
invalidFileContent = "Invalid UTF-8 sequence in included file '%{path}': %{error}"
invalidFile = "Failed to read the configuration file as YAML or JSON '%{path}': %{error}"
invalidContent = "Invalid content provided, expected JSON or YAML: %{error}"
resolvingParameters = "Resolving parameters from file"
failedParseParametersFile = "Failed to parse parameters file '%{path}'or content to JSON: %{error}"
couldNotReadParametersFile = "Could not read parameters file '%{path}': %{error}"
invalidParametersContent = "Invalid parameters content provided, expected JSON or YAML: %{error}"
invalidPath = "Include path '%{path}' must not contain '..'"
failedGetCurrentDirectory = "Failed to get current directory"
noParameters = "No parameters specified"

[resource_command]
implementedAs = "implemented as"
invalidOperationOnAdapter = "Can not perform this operation on the adapter itself"
setInputEmpty = "Desired input is empty"
testInputEmpty = "Expected input is required"
jsonError = "JSON: %{err}"

[subcommand]
actualStateNotObject = "actual_state is not an object"
unexpectedTestResult = "Unexpected Group TestResult"
assertionFailed = "Assertion failed for resource '%{resource_type}'"
message = "message"
currentDirectory = "current directory"
noParameters = "No parameters specified"
parameters = "Parameters specified"
failedConvertJson = "Failed to convert YAML to JSON"
invalidParameters = "Parameters are not valid JSON or YAML"
invalidPath = "Target path does not exist"
failedSetParameters = "Parameter input failure"
invalidInclude = "Failed to deserialize Include input"
failedSerialize = "Failed to convert validation result to JSON"
invalidConfiguration = "Failed to deserialize configuration"
failedSerializeResolve = "Failed to serialize resolve result"
validatingConfiguration = "Validating configuration against schema"
noResources = "Resources not specified"
resourceTypeNotSpecified = "Resource type not specified"
validatingResource = "Validating resource named"
resourceNotFound = "Resource type not found"
tableHeader_type = "Type"
tableHeader_kind = "Kind"
tableHeader_version = "Version"
tableHeader_capabilities = "Capabilities"
tableHeader_adapter = "RequireAdapter"
tableHeader_description = "Description"
tableHeader_functionName = "Function"
tableHeader_functionCategory = "Category"
tableHeader_minArgs = "MinArgs"
tableHeader_maxArgs = "MaxArgs"
tableHeader_argTypes = "ReturnTypes"
invalidFunctionFilter = "Invalid function filter"
maxInt = "maxInt"
invalidManifest = "Error in manifest for"
jsonArrayNotSupported = "JSON array output format is only supported for `--all'"

[util]
failedToConvertJsonToString = "Failed to convert JSON to string"
failedToReadTracingSetting = "Could not read 'tracing' setting"
invalidTraceLevel = "Default to 'warn', invalid DSC_TRACE_LEVEL value"
failedToSetTracing = "Unable to set global default tracing subscriber.  Tracing is disabled."
readingInput = "Reading input from command line parameter"
inputIsFile = "Document provided is a file path, use '--file' instead"
readingInputFromFile = "Reading input from file"
readingInputFromStdin = "Reading input from STDIN"
invalidUtf8 = "Invalid utf-8 input"
failedToReadStdin = "Failed to read input from STDIN"
failedToReadFile = "Failed to read input file"
noInput = "No input provided"
emptyInput = "Empty input provided"
failedToParseInput = "Invalid JSON or YAML"
failedToAbsolutizePath = "Error making config path absolute"
failedToGetParentPath = "Error reading config path parent"
dscConfigRootAlreadySet = "The current value of DSC_CONFIG_ROOT env var will be overridden"
settingDscConfigRoot = "Setting DSC_CONFIG_ROOT env var as"
stdinNotAllowedForBothParametersAndInput = "Cannot read from STDIN for both parameters and input."
removingUtf8Bom = "Removing UTF-8 BOM from input"
