# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema:     https://json-schema.org/draft/2020-12/schema
$id:         <HOST>/<PREFIX>/<VERSION>/config/document.yaml
title:       DSC Configuration Document schema
description: Describes a valid DSC Configuration Document.

markdownDescription: | # VS Code only
  ***
  [_Online Documentation_][01]
  ***

  Describes a valid DSC Configuration Document.

  DSC Configurations enable users to define state by combining different DSC Resources. A
  configuration document uses parameters and variables to pass to a set of one or more resources
  that define a desired state.

  [01]: <DOCS_BASE_URL>/reference/schemas/config/document?<DOCS_VERSION_PIN>


type: object
required:
  - $schema
  - resources
properties:
  $schema:
    title: Schema
    description: >-
      This property must be the canonical URL of the DSC Configuration Document schema that the
      document is implemented for.
    type: string
    format: uri
    enum:
      - <HOST>/<PREFIX>/<VERSION>/config/document.yaml
      - <HOST>/<PREFIX>/<VERSION>/bundled/config/document.yaml
      - <HOST>/<PREFIX>/<VERSION>/bundled/config/document.vscode.yaml
      - <HOST>/<PREFIX>/2023/08/config/document.yaml
      - <HOST>/<PREFIX>/2023/08/bundled/config/document.yaml
      - <HOST>/<PREFIX>/2023/08/bundled/config/document.vscode.yaml
    # VS Code only:
    markdownDescription: |
      ***
      [_Online Documentation_][01]
      ***

      This property must be the canonical URL of the DSC Configuration Document schema that the
      document is implemented for.

      For every version of the schema, there are three valid urls:

      ```yaml
      .../config/document.json
      ```
      
      > The URL to the canonical non-bundled schema. When it's used for validation, the validating
      > client needs to retrieve this schema and every schema it references.
        
      ```yaml
      .../bundled/config/document.json
      ```
      
      > The URL to the bundled schema. When it's used for validation, the validating client only
      > needs to retrieve this schema.
      >
      > This schema uses the bundling model introduced for JSON Schema 2020-12. While DSC can
      > still validate the document when it uses this schema, other tools may error or behave
      > in unexpected ways.

      ```yaml
      .../bundled/config/document.vscode.json
      ```
      
      > The URL to the enhanced authoring schema. This schema is much larger than the other
      > schemas, as it includes additional definitions that provide contextual help and snippets
      > that the others don't include.
      >
      > This schema uses keywords that are only recognized by VS Code. While DSC can still
      > validate the document when it uses this schema, other tools may error or behave in
      > unexpected ways.

      [01]: <DOCS_BASE_URL>/reference/schemas/config/document?<DOCS_VERSION_PIN>#schema
    markdownEnumDescriptions:
      - | # <HOST>/<PREFIX>/<VERSION>/config/document.yaml
          <!-- force a line break -->

          > #### `<VERSION>` non-bundled
          >
          > Indicates that the configuration document adheres to the `<VERSION>` schema. This URL
          > points to the canonical non-bundled schema. When it's used for validation, the
          > validating client needs to retrieve this schema and every schema it references.
      - | # <HOST>/<PREFIX>/<VERSION>/bundled/config/document.yaml
          <!-- force a line break -->

          > #### `<VERSION>` bundled
          >
          > Indicates that the configuration document adheres to the `<VERSION>` schema. This URL
          > points to the bundled schema. When it's used for validation, the validating client
          > only needs to retrieve this schema.
          >
          > This schema uses the bundling model introduced for JSON Schema 2020-12. While DSC can
          > still validate the document when it uses this schema, other tools may error or behave
          > in unexpected ways.
      - | # <HOST>/<PREFIX>/<VERSION>/bundled/config/document.vscode.yaml
          <!-- force a line break -->

          > #### `<VERSION>` enhanced authoring
          >
          > Indicates that the configuration document adheres to the `<VERSION>` schema. This URL
          > points to the enhanced authoring schema. This schema is much larger than the other
          > schemas, as it includes additional definitions that provide contextual help and
          > snippets that the others don't include.
          >
          > This schema uses keywords that are only recognized by VS Code. While DSC can still
          > validate the document when it uses this schema, other tools may error or behave in
          > unexpected ways.
      - | # <HOST>/<PREFIX>/2023/08/config/document.yaml
          <!-- force a line break -->

          > #### `2023/08` non-bundled
          >
          > Indicates that the configuration document adheres to the `2023/08` schema. This version
          > is deprecated, and should only be used for compatibility with `alpha.3` and earlier.
          > Migrate to using the `<VERSION>` of the schema 
          >
          > This URL points to the canonical non-bundled schema. When it's used for validation, the
          > validating client needs to retrieve this schema and every schema it references.

      - | # <HOST>/<PREFIX>/2023/08/bundled/config/document.yaml
          <!-- force a line break -->

          > #### `2023/08` bundled
          >
          > Indicates that the configuration document adheres to the `2023/08` schema. This URL
          > points to the bundled schema. When it's used for validation, the validating client
          > only needs to retrieve this schema.
          >
          > This schema uses the bundling model introduced for JSON Schema 2020-12. While DSC can
          > still validate the document when it uses this schema, other tools may error or behave
          > in unexpected ways.
      - | # <HOST>/<PREFIX>/2023/08/bundled/config/document.vscode.yaml
          <!-- force a line break -->

          > #### `2023/08` enhanced authoring
          >
          > Indicates that the configuration document adheres to the `2023/08` schema. This URL
          > points to the enhanced authoring schema. This schema is much larger than the other
          > schemas, as it includes additional definitions that provide contextual help and
          > snippets that the others don't include.
          >
          > This schema uses keywords that are only recognized by VS Code. While DSC can still
          > validate the document when it uses this schema, other tools may error or behave in
          > unexpected ways.

  parameters:
    title: DSC Configuration document parameters
    description: >-
      Defines runtime options for the configuration. Users and integrating tools can override use
      the defined parameters to pass alternate values to the configuration.
    type: object
    additionalProperties:
      $ref: /<PREFIX>/<VERSION>/config/document.parameter.yaml
    # VS Code only
    markdownDescription: |
      ***
      [_Online Documentation_][01]
      ***

      Defines runtime options for the configuration. Users and integrating tools can override use
      the defined parameters to pass alternate values to the configuration.

      [01]: <DOCS_BASE_URL>/reference/schemas/config/document?<DOCS_VERSION_PIN>#parameters
    defaultSnippets:
      - label: ' New Parameter'
        markdownDescription: |-
          Defines a new runtime option for the configuration.

          ```yaml
          parameterId:
            type:          <type>
            description:   <description text>
            defaultValue:  <value>
            allowedValues:
              - <first>
          ```
        body:
          ${1:parameterId}:
            type:          $2
            description:   $3
            defaultValue:  $4
            allowedValues:
              - $5

      - label: ' New Integer Parameter'
        markdownDescription: |-
          Defines a new runtime option for the configuration as an integer value.

          ```yaml
          parameterId:
            type:          int
            description:   <description text>
            defaultValue:  <value>
            minValue:      <minimum>
            minValue:      <maximum>
          ```
        body:
          ${1:parameterId}:
            type:         int
            description:  $2
            defaultValue: $3
            minValue:     $4
            maxValue:     $5

  variables:
    title: Configuration variables
    description: >-
      Defines a set of reusable values for the configuration document. The names of this value's
      properties are the strings used to reference a variable's value.
    type: object
    # VS Code only
    markdownDescription: |
      ***
      [_Online Documentation_][01]
      ***

      Defines a set of reusable values for the configuration document. The names of this value's
      properties are the strings used to reference a variable's value.

      [01]: <DOCS_BASE_URL>/reference/schemas/config/document?<DOCS_VERSION_PIN>#variables
    defaultSnippets:
      - label: ' New variable property'
        markdownDescription: |-
          Defines a new variable as a key-value pair.

          ```yaml
          variableName: variableValue
          ```
        body:
          ${1:variableName}: ${2:variableValue}

      - label: ' New variable property (object)'
        markdownDescription: |-
          Defines a new key-value pair for the variables where the value is an object.

          ```yaml
          variableName:
            key: value
          ```
        body:
          ${1:variableName}:
            ${2:key}: ${3:value}

      - label: ' New variable property (array)'
        markdownDescription: |-
          Defines a new key-value pair for the variables where the value is an array.

          ```yaml
          variableName:
            - firstValue
            - secondValue
          ```
        body:
          ${1:variableName}:
            - ${2:firstValue}
            - ${3:secondValue}

  resources:
    title:       DSC Configuration document resources
    description: Defines a list of DSC Resource instances for the configuration to manage.
    type:        array
    minItems:    1
    items:
      $ref: /<PREFIX>/<VERSION>/config/document.resource.yaml
    # VS Code only
    markdownDescription: |
      ***
      [_Online Documentation_][01]
      ***

      Defines a list of DSC Resource instances for the configuration to manage.

      [01]: <DOCS_BASE_URL>/reference/schemas/config/document?<DOCS_VERSION_PIN>#resources

  metadata:
    title: Configuration metadata
    description: >-
      Defines a set of key-value pairs for the configuration. This metadata
      isn't validated.
    type: object
    # VS Code only
    markdownDescription: |
      ***
      [_Online Documentation_][01]
      ***

      Defines a set of key-value pairs for the configuration. This metadata isn't validated.

      [01]: <DOCS_BASE_URL>/reference/schemas/config/document?<DOCS_VERSION_PIN>#metadata-1
    defaultSnippets:
      - label: ' New metadata property'
        markdownDescription: |-
          Defines a key-value pair for the metadata:

          ```yaml
          metadataName: value
          ```
        body:
          ${1:metadataName}: ${2:value}

      - label: ' New metadata property (object)'
        markdownDescription: |-
          Defines a new key-value pair for the metadata where the value is an object.

          ```yaml
          metadataName:
            key: value
          ```
        body:
          ${1:metadataName}:
            ${2:key}: ${3:value}

      - label: ' New metadata property (array)'
        markdownDescription: |-
          Defines a new key-value pair for the metadata where the value is an array.

          ```yaml
          metadataName:
            - firstValue
            - secondValue
          ```
        body:
          ${1:metadataName}:
            - ${2:firstValue}
            - ${3:secondValue}
